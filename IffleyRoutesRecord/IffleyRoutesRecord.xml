<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IffleyRoutesRecord</name>
    </assembly>
    <members>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetTechGrades">
            <summary>
            Gets a list of all tech grades.
            </summary>
            <returns>The list of tech grades</returns>
            <response code="200">The list of tech grades</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetTechGrade(System.Int32)">
            <summary>
            Gets a tech grade by its ID.
            </summary>
            <param name="gradeId">The ID of the tech grade to return</param>
            <returns>The tech grade with the given ID</returns>
            <response code="200">The requested tech grade</response>
            <response code="404">No tech grade with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetBGrades">
            <summary>
            Gets a list of all B grades.
            </summary>
            <returns>The list of B grades</returns>
            <response code="200">The list of B grades</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetBGrade(System.Int32)">
            <summary>
            Gets a B grade by its ID.
            </summary>
            <param name="gradeId">The ID of the B grade to return</param>
            <returns>The B grade with the given ID</returns>
            <response code="200">The requested B grade</response>
            <response code="404">No B grade with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetPoveyGrades">
            <summary>
            Gets a list of all Povey grades.
            </summary>
            <returns>The list of Povey grades</returns>
            <response code="200">The list of Povey grades</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetPoveyGrade(System.Int32)">
            <summary>
            Gets a Povey grade by its ID.
            </summary>
            <param name="gradeId">The ID of the Povey grade to return</param>
            <returns>The Povey grade with the given ID</returns>
            <response code="200">The requested Povey grade</response>
            <response code="404">No Povey grade with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetFurlongGrades">
            <summary>
            Gets a list of all Furlong grades.
            </summary>
            <returns>The list of Furlong grades</returns>
            <response code="200">The list of Furlong grades</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.GradeController.GetFurlongGrade(System.Int32)">
            <summary>
            Gets a Furlong grade by its ID.
            </summary>
            <param name="gradeId">The ID of the Furlong grade to return</param>
            <returns>The Furlong grade with the given ID</returns>
            <response code="200">The requested Furlong grade</response>
            <response code="404">No Furlong grade with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.HoldController.GetHolds">
            <summary>
            Gets a list of all holds.
            </summary>
            <returns>The full list of holds</returns>
            <response code="200">The full list of holds</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.HoldController.GetHold(System.Int32)">
            <summary>
            Gets a hold by its ID.
            </summary>
            <param name="holdId">The ID of the hold to return</param>
            <returns>The hold with the given ID</returns>
            <response code="200">The requested hold</response>
            <response code="404">No hold with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.IssueController.GetIssues">
            <summary>
            Gets a list of all issues.
            </summary>
            <returns>The full list of issues</returns>
            <response code="200">The full list of issues</response>
            <response code="500">Unexpected error</response>
            <response code="501">Not currently available</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.IssueController.GetProblemIssues">
            <summary>
            Gets a list of all problem issues.
            </summary>
            <returns>The full list of problem issues</returns>
            <response code="200">The full list of problem issues</response>
            <response code="500">Unexpected error</response>
            <response code="501">Not currently available</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.IssueController.CreateProblemIssue(IffleyRoutesRecord.Models.DTOs.Requests.CreateProblemIssueRequest)">
            <summary>
            Creates a problem along with any additional rules needed. This is unavailable until authentication is set up.
            </summary>
            <param name="issue">The problem to be created</param>
            <returns>Status code indicating success</returns>
            <response code="204">Success</response>
            <response code="404">Invalid problem Id</response>
            <response code="500">Unexpected error</response>
            <response code="501">Not currently available</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.IssueController.CreateIssue(IffleyRoutesRecord.Models.DTOs.Requests.CreateIssueRequest)">
            <summary>
            Creates a problem along with any additional rules needed. This is unavailable until authentication is set up.
            </summary>
            <param name="issue">The problem to be created</param>
            <returns>Status code indicating success</returns>
            <response code="204">Success</response>
            <response code="500">Unexpected error</response>
            <response code="501">Not currently available</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.ProblemController.GetProblems">
            <summary>
            Gets a list of all problems.
            </summary>
            <returns>The full list of problems</returns>
            <response code="200">The full list of problems</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.ProblemController.GetProblem(System.Int32)">
            <summary>
            Gets a problem by its ID.
            </summary>
            <param name="problemId">The ID of the problem to return</param>
            <returns>The problem with the given ID</returns>
            <response code="200">The requested problem</response>
            <response code="404">No problem with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.ProblemController.CreateProblem(IffleyRoutesRecord.Models.DTOs.Requests.CreateProblemRequest)">
            <summary>
            Creates a problem along with any additional rules needed. This is unavailable until authentication is set up.
            </summary>
            <param name="problem">The problem to be created</param>
            <returns>The created problem</returns>
            <response code="201">The created problem</response>
            <response code="404">One of the provided IDs was not found</response>
            <response code="409">One of the provided names for the problem or a rule already exists</response>
            <response code="500">Unexpected error</response>
            <response code="501">Not currently available</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.RuleController.GetProblemRule(System.Int32)">
            <summary>
            Gets a problem rule by its ID.
            </summary>
            <param name="ruleId">The ID of the problem rule to return</param>
            <returns>The problem rule with the given ID</returns>
            <response code="200">The requested problem rule</response>
            <response code="404">No problem rule with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.RuleController.GetProblemRules">
            <summary>
            Gets a list of all problem rules.
            </summary>
            <returns>The full list of problem rules</returns>
            <response code="200">The full list of problem rules</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.RuleController.GetHoldRule(System.Int32)">
            <summary>
            Gets a hold rule by its ID.
            </summary>
            <param name="ruleId">The ID of the hold rule to return</param>
            <returns>The hold rule with the given ID</returns>
            <response code="200">The requested hold rule</response>
            <response code="404">No hold rule with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.RuleController.GetHoldRules">
            <summary>
            Gets a list of all hold rules.
            </summary>
            <returns>The full list of hold rules</returns>
            <response code="200">The full list of hold rules</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.StyleSymbolController.GetStyleSymbols">
            <summary>
            Gets a list of all style symbols.
            </summary>
            <returns>The full list of holds</returns>
            <response code="200">The full list of holds</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="M:IffleyRoutesRecord.Controllers.StyleSymbolController.GetStyleSymbol(System.Int32)">
            <summary>
            Gets a style symbol by its ID.
            </summary>
            <param name="styleSymbolId">The ID of the style symbol to return</param>
            <returns>The style symbol with the given ID</returns>
            <response code="200">The requested style symbol</response>
            <response code="404">No style symbol with the provided ID was found</response>
            <response code="500">Unexpected error</response>
        </member>
        <member name="T:IffleyRoutesRecord.DatabaseOptions.DatabasePrePopulationOptions">
            <summary>
            Options for populating the database with data on startup
            </summary>
        </member>
        <member name="F:IffleyRoutesRecord.DatabaseOptions.DatabasePrePopulationOptions.None">
            <summary>
            No data will be added
            </summary>
        </member>
        <member name="F:IffleyRoutesRecord.DatabaseOptions.DatabasePrePopulationOptions.OnlyStaticData">
            <summary>
            Only static data (holds, grades, and style symbols) will be added
            </summary>
        </member>
        <member name="F:IffleyRoutesRecord.DatabaseOptions.DatabasePrePopulationOptions.StaticDataAndExistingProblems">
            <summary>
            Static data and problems will be added
            </summary>
        </member>
        <member name="T:IffleyRoutesRecord.DatabaseOptions.DatabaseType">
            <summary>
            The type of database registered at startup
            </summary>
        </member>
        <member name="F:IffleyRoutesRecord.DatabaseOptions.DatabaseType.Real">
            <summary>
            An actual persistent SQL database
            </summary>
        </member>
        <member name="F:IffleyRoutesRecord.DatabaseOptions.DatabaseType.Memory">
            <summary>
            An in memory database without persistence
            </summary>
        </member>
        <member name="T:IffleyRoutesRecord.Middleware.ErrorHandlingMiddleware">
            <summary>
            Middleware to handle exceptions
            </summary>
        </member>
        <member name="M:IffleyRoutesRecord.Middleware.ErrorHandlingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invoke the next action in the pipeline
            </summary>
            <param name="context">Current http context</param>
            <returns>A task waiting on the rest of the pipeline</returns>
        </member>
    </members>
</doc>
